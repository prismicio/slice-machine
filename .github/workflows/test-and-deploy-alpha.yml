name: test-and-deploy-alpha

on: [push]

jobs:
  install-deps:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-cache
      - uses: ./.github/actions/setup-node
      - name: Install dependencies
        run: npm i
      - name: List all dependencies
        shell: bash
        run: npm list

  unit-tests:
    needs: install-deps
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-cache
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/build-essential
      - name: Running functional and unit tests
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          REPO_URL: ${{ secrets.REPO_URL }}
          wroom_endpoint: ${{ secrets.PRISMIC_URL }}
          authentication_server_endpoint: ${{ secrets.AUTHENTICATION_SERVER_ENDPOINT }}
          customtypesapi_endpoint: ${{ secrets.CUSTOMTYPESAPI_ENDPOINT }}
          user_service_endpoint: ${{ secrets.USER_SERVICE_ENDPOINT }}
          acl_provider_endpoint: ${{ secrets.ACL_PROVIDER_ENDPOINT }}
        run: npm run test
  
  dep-check:
    needs: install-deps
    runs-on: [ubuntu-latest]
    steps: 
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-cache
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/build-essential
      - name: Dependency Checks
        run: npm run depcheck
  
  prettier:
    needs: install-deps
    runs-on: [ubuntu-latest]
    steps: 
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-cache
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/build-essential
      - name: Prettier
        run: npm run prettier:check
  
  linting:
    needs: install-deps
    runs-on: [ubuntu-latest]
    steps: 
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-cache
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/build-essential
      - name: Linting
        run: lerna run lint

  audit:
    needs: install-deps
    runs-on: [ubuntu-latest]
    steps: 
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-cache
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/build-essential
      - name: Audit
        run: lerna run audit

  e2e-tests:
    needs: install-deps
    runs-on: [ubuntu-latest]
    steps: 
      - uses: actions/checkout@v2
      - uses: ./.github/actions/restore-cache
      - uses: ./.github/actions/setup-node
      - uses: ./.github/actions/build-essential
      - name: Build slice machine init
        working-directory: ./packages/init
        run: npm run build
      - name: Build and export slice machine UI
        working-directory: ./packages/slice-machine
        run: npm run build
      - name: Running End to End tests
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          PRISMIC_URL: ${{ secrets.PRISMIC_URL }}
          wroom_endpoint: ${{ secrets.PRISMIC_URL }}
          authentication_server_endpoint: ${{ secrets.AUTHENTICATION_SERVER_ENDPOINT }}
          customtypesapi_endpoint: ${{ secrets.CUSTOMTYPESAPI_ENDPOINT }}
          user_service_endpoint: ${{ secrets.USER_SERVICE_ENDPOINT }}
          acl_provider_endpoint: ${{ secrets.ACL_PROVIDER_ENDPOINT }}
        run: npm i && npm run test:e2e
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-tests-screenshots
          path: cypress/screenshots/

  deployment:
    runs-on: ubuntu-latest
    # TODO: Restore `e2e-tests` dependency once the e2e tests are fixed.
    # needs: [e2e-tests, audit, linting, prettier, dep-check, unit-tests, install-deps]
    needs: [audit, linting, prettier, dep-check, unit-tests, install-deps]
    if: startsWith(github.ref, 'refs/heads/dev') # Job only runs on dev branches
    environment: alpha
    steps: 
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-node
      - name: Install Dependencies
        run: |
          npm ci
          git checkout .
      - uses: ./.github/actions/build-essential
      - name: Version And Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NEXT_PUBLIC_SM_UI_SEGMENT_KEY: Ng5oKJHCGpSWplZ9ymB7Pu7rm0sTDeiG
          PUBLIC_SM_INIT_SEGMENT_KEY: JfTfmHaATChc4xueS7RcCBsixI71dJIJ
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout .
          npm run bump:alpha --preid="${{ github.ref_name }}"
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm run publish:alpha
