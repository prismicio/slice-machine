name: ci

on: [push]

jobs:
  prepare:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules and artifacts
        uses: ./.github/actions/restore-cache

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Install dependencies
        run: yarn install

      - name: Build essentials
        uses: ./.github/actions/build-essential

  prepare-win32:
    runs-on: [windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules and artifacts
        uses: ./.github/actions/restore-cache

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Install dependencies
        run: yarn install

      - name: Build essentials
        uses: ./.github/actions/build-essential

  prettier:
    needs: prepare
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore cache
        uses: ./.github/actions/restore-cache

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Prettier
        run: yarn prettier:check

  packages:
    needs: prepare
    runs-on: [ubuntu-latest]
    strategy:
      fail-fast: false
      matrix:
        package:
          # Don't forget to replicate this list under `packages-win32` matrix
          - "@slicemachine/plugin-kit"
          - "@slicemachine/manager"
          - "@slicemachine/init"
          - slice-machine-ui
          - start-slicemachine
          - "@slicemachine/adapter-next"
          - "@slicemachine/adapter-nuxt"
          - "@slicemachine/adapter-nuxt2"
          - "@slicemachine/adapter-sveltekit"
          - "@slicemachine/e2e"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore cache
        uses: ./.github/actions/restore-cache

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Validate dependencies
        run: yarn workspace ${{ matrix.package }} depcheck

      - name: Audit dependencies
        run: yarn workspace ${{ matrix.package }} audit

      - name: Lint
        run: yarn workspace ${{ matrix.package }} lint

      - name: Types
        run: yarn workspace ${{ matrix.package }} types

      - name: Unit
        run: yarn workspace ${{ matrix.package }} unit
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          REPO_URL: ${{ secrets.REPO_URL }}
          wroom_endpoint: ${{ secrets.PRISMIC_URL }}
          authentication_server_endpoint: ${{ secrets.AUTHENTICATION_SERVER_ENDPOINT }}
          customtypesapi_endpoint: ${{ secrets.CUSTOMTYPESAPI_ENDPOINT }}
          user_service_endpoint: ${{ secrets.USER_SERVICE_ENDPOINT }}
          acl_provider_endpoint: ${{ secrets.ACL_PROVIDER_ENDPOINT }}

  packages-win32:
    needs: prepare-win32
    runs-on: [windows-latest]
    strategy:
      fail-fast: false
      matrix:
        package:
          # Don't forget to replicate this list under `packages` matrix
          - "@slicemachine/plugin-kit"
          - "@slicemachine/manager"
          - "@slicemachine/init"
          - slice-machine-ui
          - start-slicemachine
          - "@slicemachine/adapter-next"
          - "@slicemachine/adapter-nuxt"
          - "@slicemachine/adapter-nuxt2"
          - "@slicemachine/adapter-sveltekit"
          - "@slicemachine/e2e"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore cache
        uses: ./.github/actions/restore-cache

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Unit
        run: yarn workspace ${{ matrix.package }} unit
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          REPO_URL: ${{ secrets.REPO_URL }}
          wroom_endpoint: ${{ secrets.PRISMIC_URL }}
          authentication_server_endpoint: ${{ secrets.AUTHENTICATION_SERVER_ENDPOINT }}
          customtypesapi_endpoint: ${{ secrets.CUSTOMTYPESAPI_ENDPOINT }}
          user_service_endpoint: ${{ secrets.USER_SERVICE_ENDPOINT }}
          acl_provider_endpoint: ${{ secrets.ACL_PROVIDER_ENDPOINT }}

  e2e:
    needs: prepare
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore cache
        uses: ./.github/actions/restore-cache

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Set up Playwright browsers
        run: yarn test:e2e:install

      - name: Running E2E tests
        run: yarn test:e2e
        env:
          PRISMIC_URL: https://wroom.io
          WROOM_EMAIL: ${{ secrets.EMAIL }}
          WROOM_PASSWORD: ${{ secrets.PASSWORD }}

      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Playwright HTML report
          path: playwright/playwright-report/
          retention-days: 30

  e2e-cypress:
    needs: prepare
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore cache
        uses: ./.github/actions/restore-cache

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Build Slice Machine UI, next-adapter, init and start scripts
        run: yarn workspaces foreach --include '{@slicemachine/adapter-next,@slicemachine/init,slice-machine-ui,start-slicemachine}' --topological --verbose run build

      - name: Running End to End tests
        run: yarn cypress
        env:
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          PRISMIC_URL: ${{ secrets.PRISMIC_URL }}
          wroom_endpoint: ${{ secrets.PRISMIC_URL }}
          authentication_server_endpoint: ${{ secrets.AUTHENTICATION_SERVER_ENDPOINT }}
          customtypesapi_endpoint: ${{ secrets.CUSTOMTYPESAPI_ENDPOINT }}
          user_service_endpoint: ${{ secrets.USER_SERVICE_ENDPOINT }}
          acl_provider_endpoint: ${{ secrets.ACL_PROVIDER_ENDPOINT }}

      - name: Upload End to End screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-tests-screenshots-cypress
          path: cypress/screenshots/

  deployment:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/dev') # Job only runs on dev branches
    environment: alpha
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: ./.github/actions/setup-node

      - name: Install Dependencies
        run: |
          yarn install
          git checkout .

      - name: Build essentials
        uses: ./.github/actions/build-essential

      - name: Version And Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NEXT_PUBLIC_SM_UI_SEGMENT_KEY: Ng5oKJHCGpSWplZ9ymB7Pu7rm0sTDeiG
          PUBLIC_SM_INIT_SEGMENT_KEY: JfTfmHaATChc4xueS7RcCBsixI71dJIJ
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          npm_config_preid: ${{ github.ref_name }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout .
          yarn bump:alpha
          yarn publish:alpha
