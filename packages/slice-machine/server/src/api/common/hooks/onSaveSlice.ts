import path from 'path'
import { Library } from '@lib/models/common/Library'
import Files from '@lib/utils/files'
import { findIndexFile } from '@lib/utils/lib'
import Environment from '@lib/models/common/Environment'
import { listComponentsByLibrary } from '@lib/queries/listComponents'

const createIndexFile = (lib: Library) => {
  let f = `// This file is generated by Prismic local builder. Update with care!\n\n`

  for (const c of lib.components) {
    f += `export { default as ${c.infos.sliceName} } from './${c.infos.sliceName}'\n`
  }
  return f
}

export default async function onSaveSlice(env: Environment) {
  const libraries = await listComponentsByLibrary(env)
  const localLibs = libraries.filter(e => e.isLocal)

  for (const lib of localLibs) {
    if (lib.components.length) {
      const { pathToSlice: relativePathToLib } = lib.components[0]
      const file = createIndexFile(lib)

      const pathToLib = path.join(env.cwd, relativePathToLib)

      const indexFilePath = findIndexFile(pathToLib) || path.join(pathToLib, 'index.js')
      Files.write(indexFilePath, file)
    }
  }
}